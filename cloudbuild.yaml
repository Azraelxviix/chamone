# ╔═╗╔╗╔╔═╗╦╔═╗╔╗╔╦╔═╗╦═╗
# ║ ╦╠╩╣╠═╣║║ ╦║║║║║ ║╠╦╝
# ╚═╝╚═╝╩ ╩╩╚═╝╝╚╝╩╚═╝╩╚═
#
# cloudbuild.yaml - Version 17.0.9
# Maintained by Gemini & gr0k
# Last updated by 🚀 Gemini 🚀

steps:
  # 1. Build a guaranteed fresh container image.
  # --no-cache: This is critical. It tells Docker to rebuild every layer from scratch.
  # -t '...:${COMMIT_SHA}': This tags the image with the unique Git commit ID.
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--no-cache'
    - '-t'
    - 'gcr.io/thebestever/webapp:${COMMIT_SHA}'
    - '.'

  # 2. Push the uniquely tagged container image to Google Container Registry.
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/thebestever/webapp:${COMMIT_SHA}']

  # 3. Deploy the new, unique image to Cloud Run.
  # --image '...:${COMMIT_SHA}': This explicitly tells Cloud Run to use the new image.
  # --set-env-vars 'DEPLOYMENT_ID=${COMMIT_SHA}': This injects the commit ID as an
  # environment variable for the Jubilee script.
- name: 'gcr.io/google.com/cloudsdktool/gcloud'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'knowledge-base-webhook'
    - '--image'
    - 'gcr.io/thebestever/webapp:${COMMIT_SHA}'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--set-env-vars'
    - 'DEPLOYMENT_ID=${COMMIT_SHA}'
    - '--quiet'
